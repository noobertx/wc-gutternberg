{"version":3,"sources":["webpack:///./src/components/fields/lazyToggle.js"],"names":["wp","element","Component","Fragment","ToggleControl","components","LazyToggle","props","state","current","_filterValue","value","responsive","window","wprigDevice","val","onChange","final","Object","assign","setState","label","customClassName","device","onDeviceChange","setSettings"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;kBACgCA,EAAE,CAACC,O;IAA3BC,S,eAAAA,S;IAAWC,Q,eAAAA,Q;IACXC,a,GAAkBJ,EAAE,CAACK,U,CAArBD,a;;IAEFE,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,aAAO,EAAE,MAAKC,YAAL;AAAX,KAAb;AAFe;AAGlB;;;;mCAEc;AACX,aAAO,KAAKH,KAAL,CAAWI,KAAX,GAAoB,KAAKJ,KAAL,CAAWK,UAAX,GAAyB,KAAKL,KAAL,CAAWI,KAAX,CAAiBE,MAAM,CAACC,WAAxB,KAAwC,EAAjE,GAAuE,KAAKP,KAAL,CAAWI,KAAtG,GAA+G,EAAtH;AACH;;;gCAEWI,G,EAAK;AAAA,wBAC2B,KAAKR,KADhC;AAAA,UACLI,KADK,eACLA,KADK;AAAA,UACEC,UADF,eACEA,UADF;AAAA,UACcI,QADd,eACcA,QADd;;AAEb,UAAIC,MAAK,GAAGL,UAAU,GAAGM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,sBAA4BE,MAAM,CAACC,WAAnC,EAAiDC,GAAjD,EAAH,GAA6DA,GAAnF;;AACAC,cAAQ,CAACC,MAAD,CAAR;AACA,WAAKG,QAAL,CAAc;AAAEX,eAAO,EAAEM;AAAX,OAAd;AACH;;;6BAEQ;AAAA;;AAAA,yBACkE,KAAKR,KADvE;AAAA,UACGc,KADH,gBACGA,KADH;AAAA,UACUC,eADV,gBACUA,eADV;AAAA,UAC2BV,UAD3B,gBAC2BA,UAD3B;AAAA,UACuCW,MADvC,gBACuCA,MADvC;AAAA,UAC+CC,cAD/C,gBAC+CA,cAD/C;AAEL,0BACI;AAAK,iBAAS,EAAE,oCAAoC,KAAKjB,KAAL,CAAWK,UAAX,GAAwB,mBAAxB,GAA8C,EAAlF,KAAyFU,eAAe,cAAOA,eAAP,IAA2B,EAAnI;AAAhB,sBACI,mCACKD,KAAK,IAAIA,KADd,EAEKT,UAAU,iBACP,oBAAC,QAAD,QAEQW,MAAM,gBACF,oBAAC,+CAAD;AAAQ,cAAM,EAAEA,MAAhB;AAAwB,8BAAsB,EAAEA,MAAhD;AAAwD,iBAAS,EAAC,aAAlE;AAAgF,gBAAQ,EAAE,kBAAAR,GAAG;AAAA,iBAAIS,cAAc,CAACT,GAAD,CAAlB;AAAA;AAA7F,QADE,gBAGF,oBAAC,+CAAD;AAAQ,gBAAQ,EAAE,kBAAAA,GAAG;AAAA,iBAAI,MAAI,CAACK,QAAL,CAAc;AAAEX,mBAAO,EAAEM;AAAX,WAAd,CAAJ;AAAA;AAArB,QALZ,CAHR,CADJ,eAeI,oBAAC,aAAD;AACI,eAAO,EAAE,KAAKL,YAAL,EADb;AAEI,gBAAQ,EAAE,kBAACK,GAAD;AAAA,iBAAS,MAAI,CAACU,WAAL,CAAiBV,GAAjB,CAAT;AAAA;AAFd,QAfJ,CADJ;AAsBH;;;;EAzCoBb,S;;AA2CVI,yEAAf,E","file":"0.blocks.build.js","sourcesContent":["import '../css/toggle.scss'\nimport Device from './device'\nconst { Component, Fragment } = wp.element\nconst { ToggleControl } = wp.components\n\nclass LazyToggle extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { current: this._filterValue() }\n    }\n\n    _filterValue() {\n        return this.props.value ? (this.props.responsive ? (this.props.value[window.wprigDevice] || '') : this.props.value) : ''\n    }\n\n    setSettings(val) {\n        const { value, responsive, onChange } = this.props\n        let final = responsive ? Object.assign({}, value, { [window.wprigDevice]: val }) : val\n        onChange(final)\n        this.setState({ current: val })\n    }\n\n    render() {\n        const { label, customClassName, responsive, device, onDeviceChange } = this.props\n        return (\n            <div className={'wprig-field-toggle wprig-field' + (this.props.responsive ? ' wprig-responsive' : '') + (customClassName ? ` ${customClassName}` : '')}>\n                <label>\n                    {label && label}\n                    {responsive &&\n                        <Fragment>\n                            {\n                                device ?\n                                    <Device device={device} commonResponsiveDevice={device} className=\"wprig-ml-10\" onChange={val => onDeviceChange(val)} />\n                                    :\n                                    <Device onChange={val => this.setState({ current: val })} />\n                            }\n\n                        </Fragment>\n                    }\n                </label>\n                <ToggleControl\n                    checked={this._filterValue()}\n                    onChange={(val) => this.setSettings(val)}\n                />\n            </div>\n        )\n    }\n}\nexport default LazyToggle"],"sourceRoot":""}